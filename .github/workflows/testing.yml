#Tests the code and creates a coverage report
name: Testing

on:
  workflow_run:
    workflows: ["Linting"]
    types: 
     - completed

jobs:
  run-tests:
    name: Run tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # setup poetry and caching
      - uses: snok/install-poetry@v1
        with:
          version: 1.1.10
          virtualenvs-create: true
          virtualenvs-in-project: true
      - uses: actions/cache@v2.1.3
        id: cached-poetry-dependencies
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          poetry config experimental.new-installer false
          poetry install --no-interaction --no-root -vvv

      - name: run tests
        run: |
          source .venv/bin/activate
          pytest -vvv --cov-report xml --cov=./