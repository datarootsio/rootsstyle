name: Push Workflow
on:
  push:
    branches:
      - '**'

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/composite/linting
  
  testing-and-codecov:
    needs: linting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7.1", "3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/composite/testing
        with:
          python_version: ${{ matrix.python-version }}

      # upload to codecov
      - name: upload coverage to Codecov
        if: ${{ matrix.python-version == '3.8' }}
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.xml
          fail_ci_if_error: true
  
  # Tag, release and publish
  tag-release-and-publish:
    needs: testing-and-codecov
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        # with:
        #   ref: ${{ github.head_ref }}   # checkout the correct branch name
        #   fetch-depth: 0                # fetch the whole repo history
      # Create new version
      - name: Git version
        id: git_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - run: echo ${{ steps.git_version.outputs.new_tag }}
      - run: echo ${{ steps.git_version.outputs.changelog }}
      # Create release with tag
      # - name: Create a GitHub release
      #   uses: ncipollo/release-action@v1
      #   with:
      #     tag: ${{ steps.git_version.outputs.new_tag }}
      #     name: Release ${{ steps.git_version.outputs.new_tag }}
      #     body: ${{ steps.git_version.outputs.changelog }}
      # # Publish      
      # - uses: ./.github/workflows/composite/publishing
      #   with:
      #     package_version: ${{ steps.git_version.outputs.new_tag }}
      #     pypi_username: ${{ secrets.PyPI_USERNAME }}
      #     pypi_password: ${{ secrets.PyPI_PASSWORD }}