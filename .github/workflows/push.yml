name: Push Workflow
on:
  push:
    branches:
      - '**'

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/composite/linting
  
  testing-and-codecov:
    needs: linting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7.1", "3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/composite/testing
        with:
          python_version: ${{ matrix.python-version }}

      # upload to codecov
      - name: upload coverage to Codecov
        if: ${{ matrix.python-version == '3.8' }}
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.xml
          fail_ci_if_error: true
  
  # TESTING STUFF
  versioning:
    needs: testing-and-codecov
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}   # checkout the correct branch name
          fetch-depth: 0                # fetch the whole repo history
      - name: Git Version
        uses: codacy/git-version@2.2.0

      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - run: pip install poetry-dynamic-versioning
      - uses: snok/install-poetry@v1
        with:
          version: 1.1.10
          virtualenvs-create: true
          virtualenvs-in-project: true
      - uses: actions/cache@v2.1.3
        id: cached-poetry-dependencies
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ inputs.python_version }}-${{ hashFiles('**/poetry.lock') }}
      
      - run: poetry build
